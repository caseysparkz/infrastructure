---
- name: 'Harden sshd.'
  become: true
  tags:
      - 'ssh'
  block:
      - name: 'Check if sshd in /usr/bin.'
        ansible.builtin.find:
            paths: '/usr/bin/'
            patterns: 'sshd'
            file_type: 'file'
            recurse: false
            follow: true
        register: 'sshd_files'

      - name: 'Harden /etc/ssh/sshd_config'
        when: sshd_files.files | length > 0
        ansible.builtin.lineinfile:
            create: true
            path: '/etc/ssh/sshd_config'
            regexp: '{{ item.regexp }}'
            line: '{{ item.line }}'
            state: 'present'
            validate: '/usr/sbin/sshd -t -f %s'
            mode: '0644'
        loop:
            - {regexp: '(?i)^\s*^AllowAgentForwarding', line: 'AllowAgentForwarding no'}
            - {regexp: '(?i)^\s*^AllowGroups', line: 'AllowGroups sshusers'}
            - {regexp: '(?i)^\s*^ClientAliveCountMax', line: 'ClientAliveCountMax 0'}
            - {regexp: '(?i)^\s*^ClientAliveInterval', line: 'ClientAliveInterval 300'}
            - {regexp: '(?i)^\s*^HostbasedAuthentication', line: 'HostbasedAuthentication no'}
            - {regexp: '(?i)^\s*^ListenAddress', line: 'ListenAddress 0.0.0.0'}
            - {regexp: '(?i)^\s*^LoginGraceTime', line: 'LoginGraceTime 30'}
            - {regexp: '(?i)^\s*^MaxAuthTries', line: 'MaxAuthTries 2'}
            - {regexp: '(?i)^\s*^MaxSessions', line: 'MaxSessions 2'}
            - {regexp: '(?i)^\s*^MaxStartups', line: 'MaxStartups 2'}
            - {regexp: '(?i)^\s*^PasswordAuthentication', line: 'PasswordAuthentication no'}
            - {regexp: '(?i)^\s*^PermitRootLogin', line: 'PermitRootLogin no'}
            - {regexp: '(?i)^\s*^Port', line: 'Port 22'}
            - {regexp: '(?i)^\s*^Subsystem', line: 'Subsystem sftp  internal-sftp -f AUTHPRIV -l INFO'}
            - {regexp: '(?i)^\s*^X11Forwarding', line: 'X11Forwarding no'}

      - name: 'Check if /etc/ssh/moduli exists.'
        ansible.builtin.find:
            paths: '/etc/ssh/'
            patterns: 'moduli'
            file_type: 'file'
            recurse: false
        register: 'ssh_moduli'

      - name: 'Generate secure (>4096) Diffie-Hellman.'
        when: ssh_moduli.files | length == 0
        ansible.builtin.shell: |
            ssh-keygen -M generate -O bits=4096 /tmp/moduli
            mv /tmp/moduli /etc/ssh/moduli
        changed_when: false
        notify: 'Restart SSHD.'
        async: 300
        poll: 15

      - name: 'Remove short Diffie-Hellman.'
        when: ssh_moduli.files | length == 1
        ansible.builtin.shell: |
            awk '$5 >= 3071' /etc/ssh/moduli > /tmp/moduli
            mv /tmp/moduli /etc/ssh/moduli
        changed_when: false
        notify: 'Restart SSHD.'
...
