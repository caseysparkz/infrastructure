# Author:       Casey Sparks
# Date:         August 16, 2024
# Description:  Run `terraform validate` against new terraform configs.
---
name: "Terraform"
on:
  pull_request:
    branches: ["main"]
    paths:
      - "**/*.tf"
      - ".github/workflows/terraform.yml"
  push:
    branches: ["main"]
    paths:
      - "**/*.tf"
      - ".github/workflows/terraform.yml"
env:
  TF_VER: "1.12.2"  # Increment to update terraform version
jobs:
  terraform_validate:
    name: "Terraform Validate"
    runs-on: "ubuntu-latest"
    permissions:
      contents: "read"
    strategy:
      matrix:
        work_dir:
          - "caseyspar.kz/"
          - "caseysparkz.com/"
          - "tfstate_backend/"
          # Modules. Update with each addition.
          - "modules/cloudflare_dns_zone/"
          - "modules/ecr/"
          - "modules/forward_zones/"
          - "modules/hugo_static_site/"
          - "modules/proton_domain/"
          - "modules/s3_artifacts/"
    defaults:
      run:
        working-directory: "${{ matrix.work_dir }}"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683"  # v4.2.2
        with:
          fetch-depth: 0

      - name: "Set up Terraform"
        uses: "hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd"  # v3.1.2
        with:
          terraform_version: "${{ env.TF_VER }}"

      - name: "Initialize Terraform"
        run: "terraform init --upgrade --backend=false"

      - name: "Validate Terraform configs."
        run: "terraform validate"

# terraform_fmt:
#   name: "Terraform Format"
#   if: "github.event_name == 'pull_request'"
#   runs-on: "ubuntu-latest"
#   needs: ["terraform_validate"]
#   permissions:
#     contents: "write"
#   steps:
#     - name: "Checkout"
#       uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683"
#       with:
#         fetch-depth: 0

#     - name: "Set up Terraform"
#       uses: "hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd"  # v3.1.2
#       with:
#         terraform_version: "${{ env.TF_VER }}"

#     - name: "Terraform format"
#       id: "tf_fmt"
#       run: "echo \"stdout=$(terraform fmt --recursive)\" >> $GITHUB_OUTPUT"

#     - name: "Import PGP identity"
#       id: "import_pgp"
#       if: "steps.tf_fmt.outputs.stdout != ''"
#       uses: "crazy-max/ghaction-import-gpg@e89d40939c28e39f97cf32126055eeae86ba74ec"  # v6.3.0
#       with:
#         gpg_private_key: "${{ secrets.AUTO_SIGNING_KEY }}"
#         passphrase: "${{ secrets.AUTO_SIGNING_KEY_PASSPHRASE }}"
#         git_user_signingkey: true
#         git_commit_gpgsign: true
#         trust_level: 5

#     - name: "Commit and push changes"
#       if: "steps.import_pgp.outputs.name != ''"
#       uses: "stefanzweifel/git-auto-commit-action@778341af668090896ca464160c2def5d1d1a3eb0"  # v6.0.1
#       with:
#         commit_message: "ci(terraform): Auto-reformatted Terraform configs."
#         commit_author: "${{ steps.import_pgp.outputs.name }} <${{ steps.import_pgp.outputs.email }}>"
#         commit_user_email: "${{ steps.import_pgp.outputs.email }}"
#         commit_user_name: "${{ steps.import_pgp.outputs.name }}"
#         file_pattern: "*.tf"

  infracost_update_pr:
    name: "Add Infracost breakdown to pull request"
    if: "github.event_name == 'pull_request'"
    runs-on: "ubuntu-latest"
    needs: ["terraform_validate"]
    permissions:
      contents: "read"
      pull-requests: "write"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683"  # v4.2.2
        with:
          fetch-depth: 0
          ref: "${{ github.event.pull_request.base.ref }}"

      - name: "Setup Infracost"
        uses: "infracost/actions/setup@e9d6e6cd65e168e76b0de50ff9957d2fe8bb1832"  # v3.0.1
        with:
          api-key: "${{ secrets.INFRACOST_API_KEY }}"
          github-token: "${{ github.token }}"

      - name: "Generate Infracost baseline estimate"
        run: >
          infracost breakdown                                                 \
            --config-file .infracost.yml                                      \
            --format json                                                     \
            --out-file /tmp/infracost_base.json"

      - name: "Checkout pull request branch"
        uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683"  # v4.2.2
        with:
          fetch-depth: 0

      - name: "Generate Infracost diff"
        run: >
          infracost diff                                                      \
            --config-file .infracost.yml                                      \
            --format json                                                     \
            --compare-to /tmp/infracost_base.json                             \
            --out-file /tmp/infracost_diff.json

      - name: "Post Infracost diff to pull request"
        run: >
          infracost comment github                                            \
            --path /tmp/infracost_diff.json                                   \
            --repo ${{ github.repository }}                                   \
            --pull-request ${{ github.event.pull_request.number }}            \
            --github-token ${{ github.token }}                                \
            --behavior hide-and-new

  terraform_plan:
    name: "Terraform Plan"
    if: "github.event_name == 'pull_request'"
    runs-on: "ubuntu-latest"
    needs: ["infracost_update_pr"]
    permissions:
      contents: "write"
    strategy:
      matrix:
        work_dir:
          - "caseyspar.kz/"
          - "caseysparkz.com/"
          - "tfstate_backend/"
    defaults:
      run:
        working-directory: "${{ matrix.work_dir }}"
    steps:
      - name: "Checkout"
        uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683"  # v4.2.2
        with:
          fetch-depth: 1

      - name: "Log in to AWS CLI"
        uses: "aws-actions/configure-aws-credentials@7474bc4690e29a8392af63c5b98e7449536d5c3a"  # v4.3.1
        with:
          aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID}}"
          aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          aws-region: "${{ secrets.AWS_REGION }}"

      - name: "Set up Terraform"
        uses: "hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd"  # v3.1.2
        with:
          terraform_version: "${{ env.TF_VER }}"

      - name: "Initialize Terraform."
        run: "terraform init --upgrade --backend false"

      - name: "Create Terraform plan"
        run: "terraform plan --var-file production.tfvars --out planfile"

      - name: "Cache Terraform plan"
        uses: "actions/cache@5a3ec84eff668545956fd18022155c47e93e2684"  # v4.2.3
        with:
          path: "/tmp/production.tfplan"
          key: "${{ matrix.workdir}}/production.tfplan"

      - name: "Post PR comment"
        uses: "borchero/terraform-plan-comment@434458316f8f24dd073cd2561c436cce41dc8f34"  # v2.4.1
        with:
          token: "${{ github.token }}"
          planfile: "planfile"

# ========================= HOLD UNTIL READY FOR CD ===========================
# terraform_plan needs to cache the planfile
# terraform_apply needs to retrieve the planfile from cache and apply it
# -----------------------------------------------------------------------------
# terraform_apply:
#   name: "Terraform Apply"
#   if: "github.event_name == 'push' && github.ref == 'refs/heads/main'"
#   runs-on: "ubuntu-latest"
#   needs: ["terraform_plan"] #???
#   strategy:
#     matrix:
#       work_dir:
#         - "caseyspar.kz/"
#         - "caseysparkz.com/"
#         - "tfstate_backend/"
#   defaults:
#     run:
#       working-directory: "${{ matrix.work_dir }}"
#   steps:
#     - name: "Checkout"
#       uses: "actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683"  # v 4.2.2
#       with:
#         fetch-depth: 0

#     - name: "Log in to AWS CLI"
#       uses: "aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df"  # v4.3.1
#       with:
#         aws-access-key-id: "${{ secrets.AWS_ACCESS_KEY_ID}}"
#         aws-secret-access-key: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
#         aws-region: "${{ secrets.AWS_REGION }}"

#     - name: "Set up Terraform"
#       uses: "hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd"  # v3.1.2
#       with:
#         terraform_version: "${{ env.TF_VER }}"

#     - name: "Initialize Terraform."
#       run: "terraform init --upgrade --backend false"

#     - name: "Retrieve Terraform plan"
#       uses: "actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684"  # v4.2.3
#       with:
#         path: "/tmp/production.tfplan"
#         key: "${{ matrix.workdir}}/production.tfplan"

#     - name: "Terraform apply"
#       run: "terraform apply --var-file=production.tfvars --auto-approve /tmp/production.tfplan"
