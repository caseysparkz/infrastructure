---
name: 'Terraform'
# Author:       Casey Sparks
# Date:         August 16, 2024
# Description:  Run `terraform validate` against new terraform configs.

on:
  pull_request:
    branches: ['main']
    paths: ['**/*.tf']
  push:
    branches: ['main']
    paths: ['**/*.tf']
env:
  TF_VER: '1.9.8'                                                               # Increment to update.
jobs:
  terraform_validate:                                                           # terraform validate
    name: 'Terraform Validate'
    runs-on: 'ubuntu-latest'
    permissions:
      contents: 'read'
    strategy:
      matrix:
        work_dir:
          - 'tfstate_backend'
          - 'modules'
          - 'caseyspar.kz'
          - 'lazzykaffo.com'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'
        with:
          fetch-depth: 0

      - name: 'Set up Terraform'
        uses: 'hashicorp/setup-terraform@v3.1.2'
        with:
          terraform_version: '${{ env.TF_VER }}'

      - name: 'Initialize Terraform'
        run: 'terraform init -backend=false'
        working-directory: '${{ matrix.work_dir }}'

      - name: 'Validate Terraform configs.'
        run: 'terraform validate'
        working-directory: '${{ matrix.work_dir }}'

  terraform_fmt:                                                                # terraform fmt
    name: 'Terraform Format'
    if: '${{ github.event_name }} == "pull_request"'
    runs-on: 'ubuntu-latest'
    needs: ['terraform_validate']
    permissions:
      contents: 'write'
    defaults:
      run:
        working-directory: './terraform/'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'
        with:
          fetch-depth: 0

      - name: 'Configure Terraform'
        uses: 'hashicorp/setup-terraform@v3.1.2'
        with:
          terraform_version: '${{ env.TF_VER }}'

      - name: 'terraform fmt'
        run: 'terraform fmt -recursive'

#     - name: 'Import PGP identity'                                             # So we can sign the commit.
#       id: 'import_pgp'
#       uses: 'crazy-max/ghaction-import-gpg@v6.2.0'
#       with:
#         gpg_private_key: '${{ secrets.AUTO_SIGNING_KEY }}'
#         passphrase: '${{ secrets.AUTO_SIGNING_KEY_PASSPHRASE }}'
#         git_user_signingkey: true
#         git_commit_gpgsign: true

      - name: 'Auto-commit/push changes'
        uses: 'stefanzweifel/git-auto-commit-action@v5.0.1'
        with:
          commit_message: 'ci(terraform): Auto-reformatted Terraform configs.'
          commit_author: '${{ steps.import_pgp.outputs.name }} <${{ steps.import_pgp.outputs.email }}>'
          commit_user_email: '${{ steps.import_pgp.outputs.email }}'
          commit_user_name: '${{ steps.import_pgp.outputs.name }}'
          file_pattern: '*.tf'

  infracost_update_pr:                                                          # infracost breakdown
    name: 'Infracost Pull Request Checks'
    if: '${{ github.event_name }} == "pull_request"'
    runs-on: 'ubuntu-latest'
    needs: ['terraform_validate']
    permissions:
      contents: 'read'
      pull-requests: 'write'                                                    # Required to post comments.
    defaults:
      run:
        working-directory: './terraform/'
    steps:
      - name: 'Check out base branch'
        uses: 'actions/checkout@v4'
        with:
          ref: '${{ github.event.pull_request.base.ref }}'
          fetch-depth: 0

      - name: 'Setup Infracost'
        uses: 'infracost/actions/setup@v3.0.1'
        with:
          api-key: '${{ secrets.INFRACOST_API_KEY }}'

      - name: 'Generate Infracost cost estimate baseline'                       # Generate base branch cost.
        run: |
          infracost breakdown                                               \
            --config-file .infracost.yml                                    \
            --format json                                                   \
            --out-file /tmp/infracost-base.json

      - name: 'Checkout PR branch'                                              # Checkout the current PR branch.
        uses: 'actions/checkout@v4'
        with:
          fetch-depth: 0

      - name: 'Generate Infracost diff'                                         # Generate a cost diff.
        run: |
          infracost diff                                                    \
            --config-file .infracost.yml                                    \
            --format json                                                   \
            --compare-to /tmp/infracost-base.json                           \
            --out-file /tmp/infracost.json

      - name: 'Post Infracost comment'                                          # Comment cost diff. to PR.
        run: |
          infracost comment github                                          \
            --path /tmp/infracost.json                                      \
            --repo "${GITHUB_REPOSITORY}"                                   \
            --github-token ${{ github.token }}                              \
            --pull-request ${{ github.event.pull_request.number }}          \
            --behavior update

# HOLD ON THIS UNTIL READY FOR CI DEPLOYMENTS =================================
#  terraform_plan:                                                               # terraform plan
#    name: 'Terraform Plan'
#    if: '${{ github.event_name }} == "pull_request"'
#    runs-on: 'ubuntu-latest'
#    needs:
#      - 'terraform_validate'
#      - 'infracost_update_pr'
#    permissions:
#      contents: 'write'
#    strategy:
#      matrix:
#        work_dir:
#          - './terraform/backend/'
#          - './terraform/tau-hq.com/'
#          - './terraform/taumotors.com/'
#    defaults:
#      run:
#        working-directory: '${{ matrix.work_dir }}'
#    steps:
#      - name: 'Checkout'
#        uses: 'actions/checkout@v4'
#        with:
#          fetch-depth: 1

#      - name: 'Cache runner public IP'
#        run: 'echo "IP_ADDR=$(curl https://ipinfo.io/ip)" >> "${GITHUB_ENV}"'

#      - name: 'Log in to AWS CLI'
#        run: 'echo TODO'

#      - name: 'Set up Terraform'
#        uses: 'hashicorp/setup-terraform@v3.1.2'
#        with:
#          terraform_version: '${{ env.TF_VER }}'
# 
#      - name: 'Initialize Terraform.'
#        run: 'terraform init'

#      - name: 'Create Terraform plan'
#        run: 'terraform plan -out planfile'

#      - name: 'Post PR comment'
#        uses: 'borchero/terraform-plan-comment@v2'
#        with:
#          token: '${{ github.token }}'
#          planfile: 'planfile'

#  terraform_apply:                                                              # terraform apply
#    name: 'Terraform Apply'
#    if: '${{ github.event_name }} == "push" && ${{ github.ref }} == "refs/heads/main"'
#    runs-on: 'ubuntu-latest'
#    needs: ['terraform_validate']
#    permissions:
#      contents: 'write'
#    strategy:
#      matrix:
#        work_dir:
#          - './terraform/backend/'
#          - './terraform/tau-hq.com/'
#          - './terraform/taumotors.com/'
#    defaults:
#      run:
#        working-directory: '${{ matrix.work_dir }}'
#    steps:
#      - name: 'Checkout'
#        uses: 'actions/checkout@v4'
#        with:
#            fetch-depth: 0

#      - name: 'Log in to AWS CLI'
#        run: 'echo TODO'

#      - name: 'Set up Terraform'
#        uses: 'hashicorp/setup-terraform@v3.1.2'
#        with:
#          terraform_version: '${{ env.TF_VER }}'

#      - name: 'Initialize Terraform'
#        run: 'terraform init'

#      - name: 'Apply Terraform configs'
#        id: 'apply'
#        run: 'terraform apply -auto-approve'
...
